{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_URL","getMovie","a","fetch","response","json","FindMovie","setMovies","useState","setMovie","inputValue","setInputValue","searchError","setSearchError","handleSearh","data","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","value","type","id","placeholder","cn","onChange","target","handleInput","onClick","every","film","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32cd0e2f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","\nconst API_URL = 'https://www.omdbapi.com/?apikey=af43bc31&t=';\n\nexport async function getMovie(title) {\n  const response = await fetch(`${API_URL}${title}`);\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ movies, setMovies }) => {\n  const [movie, setMovie] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [searchError, setSearchError] = useState(false);\n\n  const handleInput = (event) => {\n    const { value } = event.target;\n\n    setInputValue(value);\n\n    setSearchError(false);\n  };\n\n  const handleSearh = async() => {\n    const data = await getMovie(inputValue);\n\n    try {\n      if (data.Response === 'False') {\n        setMovie(null);\n        setSearchError(true);\n\n        return;\n      }\n\n      setMovie({\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: data.Poster,\n        imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n        imdbId: data.imdbID,\n      });\n    } catch (error) {\n      setSearchError('Connection not founded');\n    }\n  };\n\n  const addMovie = () => {\n    setInputValue('');\n    setMovie(null);\n\n    if (movie) {\n      if (movies.every(film => film.imdbId !== movie.imdbId)) {\n        setMovies([...movies, movie]);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleSearh();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={inputValue}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input', { 'is-danger': searchError },\n              )}\n              onChange={event => handleInput(event)}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {searchError && `Can't find a movie with such a title`}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              onSubmit={handleSearh}\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              onClick={addMovie}\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape(PropTypes.string)),\n  setMovies: PropTypes.func.isRequired,\n};\n\nFindMovie.defaultProps = {\n  movies: [],\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}